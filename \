#!/usr/bin/env python3

import sys
from os.path import expanduser
import re
import subprocess
from configparser import ConfigParser


config = ConfigParser()
with open(expanduser('~/.xrandr-profiles')) as config_file:
    config.readfp(config_file)

class NoEdidFoundError(Exception):
    """raised if no connected monitor with a configured profile was found"""
    def __init__(self):
        print("could not find a configuration matching the current setup")
        sys.exit(1)



def match_configuration():
    """finds out current setup using xrandr and matches profile in ~/.xrandr-profiles file"""

    # try to find one of our profiles using `xrandr --prop` which returns the
    # EDIDs of the connected monitros
    xrandr_output = subprocess.Popen(['xrandr', '--prop'], stdout=subprocess.PIPE).stdout.read().decode('utf-8')
    try:
        # connect EDIDs into a single string per EDID removing whitespaces
        connected_edids = ["".join(s.split()) for s in re.findall(r'EDID\:(.*?)\n(?!\t\t)', xrandr_output, re.DOTALL)]
    except AttributeError: # no EDID found
        pass

    current_profile = None
    for profile in config.sections():
        # get rid of whitespaces
        configured_edids = "".join(config[profile]['EDIDs'].split()).split(',')
        if configured_edids == connected_edids:
            current_profile = profile
            break


    return current_profile

def run_xrandr_setup(profile):
    print("running xrandr")

def main():
    current_profile = match_configuration()

    if current_profile is None:
        raise NoEdidFoundError
    else:
        run_xrandr_setup(current_profile)

if __name__ == '__main__':
    main()
